<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.barchart.base</groupId>
		<artifactId>barchart-archon</artifactId>
		<version>2.1.1</version>
	</parent>

	<groupId>com.barchart.kitfox</groupId>
	<artifactId>barchart-kitfox-svg</artifactId>
	<version>1.0.0-build001-SNAPSHOT</version>
	<packaging>pom</packaging>

	<scm>
		<url>https://github.com/barchart/barchart-kitfox-svg</url>
		<connection>scm:git:git://github.com/barchart/barchart-kitfox-svg.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/barchart/barchart-kitfox-svg.git</developerConnection>
	</scm>

	<modules>
		<module>kitfox-svg-core</module>
		<module>kitfox-svg-editor</module>
	</modules>

	<properties>

		<repo-url>https://svn.java.net/svn/svgsalamander~svn/trunk</repo-url>
		<repo-connection>scm:svn:${repo-url}</repo-connection>

		<repo-module />
		<repodir>${project.build.directory}/checkout-kitfox-svg</repodir>

		<module-src-main-java>src/main/java</module-src-main-java>
		<module-src-test-java>src/test/java</module-src-test-java>

	</properties>

	<build>

		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<!-- you must specify these in release user settings.xml -->
						<username>${barchartSvnUsername}</username>
						<password>${barchartSvnPassword}</password>
						<!-- profiles -->
						<arguments>--activate-profiles update,release</arguments>
					</configuration>
				</plugin>

			</plugins>

		</pluginManagement>

	</build>

	<profiles>

		<profile>

			<id>update</id>

			<build>

				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
						<executions>
							<!-- download from apache -->
							<execution>
								<id>checkout-apache</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>checkout</goal>
								</goals>
								<configuration>
									<connectionUrl>${repo-connection}/${repo-module}</connectionUrl>
									<checkoutDirectory>${repodir}</checkoutDirectory>
								</configuration>
							</execution>
							<!-- upload into github -->
							<!-- <execution> -->
							<!-- <id>checkin-github</id> -->
							<!-- <phase>package</phase> -->
							<!-- <goals> -->
							<!-- <goal>checkin</goal> -->
							<!-- </goals> -->
							<!-- <configuration> -->
							<!-- <developerConnectionUrl>${project.scm.developerConnection}</developerConnectionUrl> -->
							<!-- <message>build-auto-checkin</message> -->
							<!-- </configuration> -->
							<!-- </execution> -->
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<configuration>
							<encoding>UTF-8</encoding>
						</configuration>
						<executions>
							<execution>
								<id>copy-src-main-java</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<resources>
										<resource>
											<directory>${repodir}/${module-src-main-java}</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
									<outputDirectory>${basedir}/src/main/java</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>copy-src-test-java</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<resources>
										<resource>
											<directory>${repodir}/${module-src-test-java}</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
									<outputDirectory>${basedir}/src/test/java</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>

			</build>

		</profile>

	</profiles>

</project>
